#!/usr/bin/env bash

set -e

[ -n "$MOPE_DEBUG" ] && set -x

print_set_version() {
	echo "<version> should be a string matching a Mono version known by mope."

	local versions="$(mope-versions --bare)"
	if [ -z "$versions" ]; then
		echo "There are currently no Mono versions installed for mope."
	else
		echo "The currently installed Mono versions are:"
		echo "$versions" | sed 's/^/  /'
	fi

	echo
	echo "The special version string 'system' will use your default system Mono."
}

case "$1" in
"") echo "usage: mope <command> [<args>]

Some useful mope commands are:
   commands      List all mope commands
   rehash        Rehash mope shims (run this after installing binaries)
   global        Set or show the global Mono version
   local         Set or show the local directory-specific Mono version
   version       Show the current Mono version
   versions      List all Mono versions known by mope
   which         Show the fule path for the given Mono command
   whence        List all Mono versions with the given command

See 'mope help <command>' for more information on a specific command.
For full documentation, see:  https://github.com/dragan/mope#readme"
;;
commands) echo "usage: mope commands

List all mope commands."
;;
global) echo "usage: mope global <version>

Sets the global Mono version. You can override the global at any time
by setting a directory-specific version with \`mope local' or by
setting the MOPE_VERSION environment variable.

$(print_set_version)"
;;
local) echo "usage: mope local <version>
       mope local --unset

Sets the local directory-specific Mono version by writing the version
name to a file named '.mono-version'.

When you run a Mono command, mope will look for a '.mono-version'
file in the current directory and each parent directory. If no such
file is found in the tree, mope will use the global Mono version
specified with \`mope global', or the version specified in the
MOPE_VERSION environment variable.

$(print_set_version)

To remove the local directory-specific Mono version, just pass the 
--unset option and the '.mono-version' file will be removed from 
the current directory."
;;
version) echo "usage: mope version

Displays the current Mono version being used by mope."
;;
versions) echo "usage: mope versions
       mope versions --bare

Lists all Mono versions known by mope."
;;
which) echo "usage: mope which <command>

Displays the full path to the binary that mope will execute when you
run the given command."
;;
whence) echo "usage: mope whence <command>

Lists all Mono versions with the given command installed."
;;
*)
	command_path="$(command -v "mope-$1" || true)"
	if [ -n "$command_path" ]; then
		echo "Sorry, the \`$1' command isn't documented yet."
		echo
		echo "You can view the command's source here:"
		echo "$command_path"
		echo
	else
		echo "mope: no such command \`$1'"
	fi
esac